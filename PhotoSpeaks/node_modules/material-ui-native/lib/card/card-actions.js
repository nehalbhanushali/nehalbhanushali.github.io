'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _reactNative = require('../../../react-native');

var _reactNative2 = _interopRequireDefault(_reactNative);

var _mixinsStylePropable = require('../mixins/style-propable');

var _mixinsStylePropable2 = _interopRequireDefault(_mixinsStylePropable);

var _stylesThemeManager = require('../styles/theme-manager');

var _stylesThemeManager2 = _interopRequireDefault(_stylesThemeManager);

var _stylesRawThemesLightRawTheme = require('../styles/raw-themes/light-raw-theme');

var _stylesRawThemesLightRawTheme2 = _interopRequireDefault(_stylesRawThemesLightRawTheme);

var View = _reactNative2['default'].View;

var CardActions = _reactNative2['default'].createClass({
  displayName: 'CardActions',

  mixins: [_mixinsStylePropable2['default']],

  contextTypes: {
    muiTheme: _reactNative2['default'].PropTypes.object
  },

  //for passing default theme context to children
  childContextTypes: {
    muiTheme: _reactNative2['default'].PropTypes.object
  },

  getChildContext: function getChildContext() {
    return {
      muiTheme: this.state.muiTheme
    };
  },

  getInitialState: function getInitialState() {
    return {
      muiTheme: this.context.muiTheme ? this.context.muiTheme : _stylesThemeManager2['default'].getMuiTheme(_stylesRawThemesLightRawTheme2['default'])
    };
  },

  //to update theme inside state whenever a new theme is passed down
  //from the parent / owner using context
  componentWillReceiveProps: function componentWillReceiveProps(nextProps, nextContext) {
    var newMuiTheme = nextContext.muiTheme ? nextContext.muiTheme : this.state.muiTheme;
    this.setState({ muiTheme: newMuiTheme });
  },

  getStyles: function getStyles() {
    return {
      root: {
        padding: 8,
        position: 'relative'
      }
    };
  },

  propTypes: {
    expandable: _reactNative2['default'].PropTypes.bool,
    actAsExpander: _reactNative2['default'].PropTypes.bool,
    showExpandableButton: _reactNative2['default'].PropTypes.bool,
    style: _reactNative2['default'].PropTypes.object
  },

  render: function render() {
    var styles = this.getStyles();

    var children = _reactNative2['default'].Children.map(this.props.children, function (child) {
      return _reactNative2['default'].cloneElement(child, {
        style: { marginRight: 8 }
      });
    });

    return _reactNative2['default'].createElement(
      View,
      _extends({}, this.props, { style: this.prepareStyles(styles.root, this.props.style) }),
      children
    );
  }
});

exports['default'] = CardActions;
module.exports = exports['default'];