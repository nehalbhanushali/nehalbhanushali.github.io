{"version":3,"sources":["webpack:///./src/client/app/UserAppBar.jsx?6618"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAGA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;;;;;;;;;;;;AAIA;;AAIA,KAAM,WAAW,2BAAY;AAC3B,YAAS;AACP;AADO,IADkB;AAI3B,WAAQ;AACN,aAAQ,EADF;AAEN;AAFM;AAJmB,EAAZ,CAAjB;;KAWM,U;;;AAGN,uBAAY,KAAZ,EAAmB;AAAA;;AAAA,+FACT,KADS;;AAEf,WAAK,KAAL,GAAa;AACX,mBAAY,KADD;AAEX,iBAAU,KAFC;AAGX,wBAAiB,KAHN;AAIX,iBAAS;;AAJE,MAAb;AAOA,WAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AACA,WAAK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;AACA,WAAK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;AACA,WAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AACA,WAAK,UAAL,GAAkB,MAAK,UAAL,CAAgB,IAAhB,OAAlB;AAbe;AAchB;;;;oCAGa;AAAE,YAAK,QAAL,CAAc,EAAC,YAAY,CAAC,KAAK,KAAL,CAAW,UAAzB,EAAd;AAAsD;;;mCAExD;AAAC,YAAK,QAAL,CAAc,EAAC,YAAY,KAAb,EAAd;AAAqC;;;oCACrC;;AAEf,YAAK,QAAL,CAAc,EAAC,UAAU,KAAX;AACE,mBAAU,aADZ,EAAd;;;AAIE,YAAK,KAAL,CAAW,QAAX,CAAoB,aAApB;;AAEA,YAAK,KAAL,CAAW,UAAX,CAAsB,EAAtB;AACA,YAAK,WAAL;AACH;;;iCAEa,G,EAAK,I,EAAM;;AAIrB,YAAK,QAAL,CAAc,EAAC,UAAU,GAAX;AACA,mBAAU,IADV,EAAd;;;AAIA,YAAK,KAAL,CAAW,QAAX,CAAoB,IAApB;;AAEA,YAAK,KAAL,CAAW,UAAX,CAAsB,8FAAtB;AAIH;;;gCAEU,G,EAAK,G,EAAI;;;AAGjB,YAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,EAAqB,GAArB;AAIF;;;8BAEU;AAAA;;;AAGP,cAEJ;AAAA;SAAA;SACA;AACI,kBAAO,KAAK,KAAL,CAAW,QADtB;AAEI,qCAA2B,KAAK,YAFpC;AAGE,kBAAO,OAAO,MAHhB;AAII,6BAAmB,KAAK,KAAL,CAAW,QAAX,GAAsB,yDAAW,MAAM,KAAK,UAAtB,GAAtB,GAA4D,iDAAa,UAAU,KAAK;;AAA5B;AAJnF,WADA;SASC;AAAA;WAAA,EAAQ,QAAQ,KAAhB;AACM,mBAAM,KAAK,KAAL,CAAW,UADvB;AAED,8BAAiB,yBAAC,UAAD;AAAA,sBAAgB,OAAK,QAAL,CAAc,EAAC,sBAAD,EAAd,CAAhB;AAAA;AAFhB;WAKS;AAAA;aAAA,EAAU,YAAY,KAAK,WAA3B;aAAwC;AAAxC,YALT;WAMS;AAAA;aAAA,EAAU,UAAU,iDAAa,wBAAb,GAApB;aAAwD,KAAK,KAAL,CAAW;AAAnE,YANT;WAOU;AAAA;aAAA,EAAU,YAAY,KAAK,YAA3B;aAA0C,KAAK,KAAL,CAAW,QAAX,GAAsB,QAAtB,GAAiC;AAA3E;AAPV;AATD,QAFI;AAuBH;;;;GAtFwB,gBAAM,S;;mBA0FhB,U","file":"0.8b8031e9af502684b699.hot-update.js","sourcesContent":["import React from 'react';\nimport Drawer from 'material-ui/Drawer';\n//import {Card, CardActions, CardHeader, CardMedia, CardTitle, CardText} from 'material-ui/Card';\n//import darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\nimport {cyan500} from 'material-ui/styles/colors';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport AppBar from 'material-ui/AppBar';\nimport IconButton from 'material-ui/IconButton';\nimport IconMenu from 'material-ui/IconMenu';\nimport Popover from 'material-ui/Popover';\nimport Menu from 'material-ui/Menu';\nimport MenuItem from 'material-ui/MenuItem';\n//import MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';\nimport ImageCamera from 'material-ui/svg-icons/image/camera';\nimport ImagePhotoLibrary from 'material-ui/svg-icons/image/photo-library';\nimport NavigationMenu from 'material-ui/svg-icons/navigation/menu';\nimport NavigationClose from 'material-ui/svg-icons/navigation/close';\nimport PopCamera from './PopCameraIcon.jsx';\nimport injectTapEventPlugin from 'react-tap-event-plugin';\nimport LoginButton from './Login.jsx';\nimport ActionLabel from 'material-ui/svg-icons/action/label';\nimport {red500, green500, orange500} from 'material-ui/styles/colors';\n\nimport SelectField from 'material-ui/SelectField';\n\n\n\ninjectTapEventPlugin();\n\n\n\nconst muiTheme = getMuiTheme({\n  palette: {\n    textColor: cyan500,\n  },\n  appBar: {\n    height: 50,\n    color: cyan500\n  },\n});\n\n\nclass UserAppBar extends React.Component {\n\n\nconstructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: false,\n      loggedIn: false,\n      loginDialogOpen :false,\n      username:\"PhotoSpeaks\"\n     \n    };\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handlePost = this.handlePost.bind(this);\n  }\n  \n\n  handleToggle(){ this.setState({drawerOpen: !this.state.drawerOpen}); }\n\n  handleClose() {this.setState({drawerOpen: false}); }\n  handleLogout() {\n    //console.log(\"bye\");\n  this.setState({loggedIn: false, \n                  username: \"PhotoSpeaks\"}); \n    //console.log(\"final in uab \"+name);\n\n    this.props.username(\"PhotoSpeaks\");\n\n    this.props.useravatar(\"\");\n    this.handleClose();\n}\n\n  handleLogin(log, name) {\n\n    \n\n    this.setState({loggedIn: log, \n                  username: name}); \n    //console.log(\"final in uab \"+name);\n\n    this.props.username(name);\n\n    this.props.useravatar(\"https://lh6.googleusercontent.com/-NlRlqnnbQpY/AAAAAAAAAAI/AAAAAAAAAGc/QzyyYDQmQ1o/photo.jpg\");\n\n \n\n}\n\nhandlePost(url, tag){\n  //console.log(url+\" \"+tag);\n\n   this.props.post(url, tag); \n\n  \n\n}\n\n  render() {\n\n  //title={ this.state.loggedIn ? { uname } : \"PhotoSpeaks\"}\n    return(\n  \n<div>\n<AppBar\n    title={this.state.username}\n    onLeftIconButtonTouchTap= {this.handleToggle}\n  style={styles.header} \n    iconElementRight={ this.state.loggedIn ? <PopCamera post={this.handlePost}/> : <LoginButton loggedIn={this.handleLogin}\n                                                                           \n                                                               /> }\n  />\n <Drawer docked={false} \n       open={this.state.drawerOpen}\nonRequestChange={(drawerOpen) => this.setState({drawerOpen})}\n       >\n       \n          <MenuItem onTouchTap={this.handleClose}><NavigationClose /></MenuItem>\n          <MenuItem leftIcon={<ActionLabel color={orange500} />}>{this.state.username}</MenuItem>\n           <MenuItem onTouchTap={this.handleLogout}>{this.state.loggedIn ? \"Logout\" : \" \" }</MenuItem>\n          \n        </Drawer>\n        </div>\n);\n}\n}\n\n\nexport default UserAppBar;\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/app/UserAppBar.jsx\n **/"],"sourceRoot":""}